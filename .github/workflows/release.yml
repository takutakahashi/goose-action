name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set release version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.1.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          release_name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            ## Goose GitHub Action ${{ steps.version.outputs.VERSION }}

            ${{ steps.changelog.outputs.changelog }}
            
            ### Installation
            ```yaml
            - uses: takutakahashi/goose-action@${{ steps.version.outputs.VERSION }}
              with:
                github_token: ${{ '${{ secrets.GITHUB_TOKEN }}' }}
                # additional configuration...
            ```
            
            Or pin to this specific image version:
            ```yaml
            - uses: takutakahashi/goose-action@main
              with:
                github_token: ${{ '${{ secrets.GITHUB_TOKEN }}' }}
                image_version: "${{ steps.version.outputs.VERSION }}"
                # additional configuration...
            ```
          draft: false
          prerelease: false
      
  build-and-push-release-image:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set release version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/takutakahashi/goose-action:${{ steps.version.outputs.VERSION }}
            ghcr.io/takutakahashi/goose-action:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max